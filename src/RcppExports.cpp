// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// As2Vs
List As2Vs(List& AsByB, arma::mat V);
RcppExport SEXP _biostat815project_As2Vs(SEXP AsByBSEXP, SEXP VSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List& >::type AsByB(AsByBSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type V(VSEXP);
    rcpp_result_gen = Rcpp::wrap(As2Vs(AsByB, V));
    return rcpp_result_gen;
END_RCPP
}
// bootPCA
List bootPCA(arma::mat& Y, int K, int B, double alpha, int centerSamples);
RcppExport SEXP _biostat815project_bootPCA(SEXP YSEXP, SEXP KSEXP, SEXP BSEXP, SEXP alphaSEXP, SEXP centerSamplesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type B(BSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< int >::type centerSamples(centerSamplesSEXP);
    rcpp_result_gen = Rcpp::wrap(bootPCA(Y, K, B, alpha, centerSamples));
    return rcpp_result_gen;
END_RCPP
}
// bootSVD_LD
List bootSVD_LD(int n, arma::mat& DUt, int K, int B, int centerSamples);
RcppExport SEXP _biostat815project_bootSVD_LD(SEXP nSEXP, SEXP DUtSEXP, SEXP KSEXP, SEXP BSEXP, SEXP centerSamplesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type DUt(DUtSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type B(BSEXP);
    Rcpp::traits::input_parameter< int >::type centerSamples(centerSamplesSEXP);
    rcpp_result_gen = Rcpp::wrap(bootSVD_LD(n, DUt, K, B, centerSamples));
    return rcpp_result_gen;
END_RCPP
}
// genBootIndices
arma::mat genBootIndices(int B, int n);
RcppExport SEXP _biostat815project_genBootIndices(SEXP BSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type B(BSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(genBootIndices(B, n));
    return rcpp_result_gen;
END_RCPP
}
// getHDpercentiles
List getHDpercentiles(List& VsByK, int B, int K, int p, double alpha);
RcppExport SEXP _biostat815project_getHDpercentiles(SEXP VsByKSEXP, SEXP BSEXP, SEXP KSEXP, SEXP pSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List& >::type VsByK(VsByKSEXP);
    Rcpp::traits::input_parameter< int >::type B(BSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(getHDpercentiles(VsByK, B, K, p, alpha));
    return rcpp_result_gen;
END_RCPP
}
// getLDpercentiles
List getLDpercentiles(List& AsByK, int B, int K, int n, double alpha);
RcppExport SEXP _biostat815project_getLDpercentiles(SEXP AsByKSEXP, SEXP BSEXP, SEXP KSEXP, SEXP nSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List& >::type AsByK(AsByKSEXP);
    Rcpp::traits::input_parameter< int >::type B(BSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(getLDpercentiles(AsByK, B, K, n, alpha));
    return rcpp_result_gen;
END_RCPP
}
// getMomentsAndMomentCI
List getMomentsAndMomentCI(List& AsByK, arma::mat& V, int B, int K, int n);
RcppExport SEXP _biostat815project_getMomentsAndMomentCI(SEXP AsByKSEXP, SEXP VSEXP, SEXP BSEXP, SEXP KSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List& >::type AsByK(AsByKSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type V(VSEXP);
    Rcpp::traits::input_parameter< int >::type B(BSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(getMomentsAndMomentCI(AsByK, V, B, K, n));
    return rcpp_result_gen;
END_RCPP
}
// quickSort
void quickSort(int q, arma::mat& A, int p, int r);
RcppExport SEXP _biostat815project_quickSort(SEXP qSEXP, SEXP ASEXP, SEXP pSEXP, SEXP rSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type A(ASEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type r(rSEXP);
    quickSort(q, A, p, r);
    return R_NilValue;
END_RCPP
}
// reindexMatricesByK
List reindexMatricesByK(List& AsByB, int B, int K);
RcppExport SEXP _biostat815project_reindexMatricesByK(SEXP AsByBSEXP, SEXP BSEXP, SEXP KSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List& >::type AsByB(AsByBSEXP);
    Rcpp::traits::input_parameter< int >::type B(BSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    rcpp_result_gen = Rcpp::wrap(reindexMatricesByK(AsByB, B, K));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_biostat815project_As2Vs", (DL_FUNC) &_biostat815project_As2Vs, 2},
    {"_biostat815project_bootPCA", (DL_FUNC) &_biostat815project_bootPCA, 5},
    {"_biostat815project_bootSVD_LD", (DL_FUNC) &_biostat815project_bootSVD_LD, 5},
    {"_biostat815project_genBootIndices", (DL_FUNC) &_biostat815project_genBootIndices, 2},
    {"_biostat815project_getHDpercentiles", (DL_FUNC) &_biostat815project_getHDpercentiles, 5},
    {"_biostat815project_getLDpercentiles", (DL_FUNC) &_biostat815project_getLDpercentiles, 5},
    {"_biostat815project_getMomentsAndMomentCI", (DL_FUNC) &_biostat815project_getMomentsAndMomentCI, 5},
    {"_biostat815project_quickSort", (DL_FUNC) &_biostat815project_quickSort, 4},
    {"_biostat815project_reindexMatricesByK", (DL_FUNC) &_biostat815project_reindexMatricesByK, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_biostat815project(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
